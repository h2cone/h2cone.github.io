<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>network on Huangh&#39;s blog</title>
    <link>https://h2cone.github.io/tags/network/</link>
    <description>Recent content in network on Huangh&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>© Huangh&#39;s blog</copyright>
    <lastBuildDate>Sun, 08 Mar 2020 11:07:41 +0800</lastBuildDate>
    
	<atom:link href="https://h2cone.github.io/tags/network/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>网络·NIO</title>
      <link>https://h2cone.github.io/2020/03/08/network_nio/</link>
      <pubDate>Sun, 08 Mar 2020 11:07:41 +0800</pubDate>
      
      <guid>https://h2cone.github.io/2020/03/08/network_nio/</guid>
      <description>I/O 本文以多线程·并发编程中的第一张图作为开篇：
 I/O 设备包括鼠标、键盘、显示器、磁盘、网卡等。 I/O（输入/输出），输入是从 I/O 设备复制数据到主存，输出是从主存复制数据到 I/O 设备。  从一个计算机角度来看，网络（适配器）是它的一个 I/O 设备。当计算机系统从主存复制字节序列到网络适配器时，数据流经过网络到达另一台机器，同理，计算机系统可以从网络适配器复制字节序列到主存。
Socket 从人类的角度来看，计算机网络由一台或多台机器组成。网络中，数据从一台机器传输到另一个机器的方式通常是分组交换，即数据被切分成适合传输的小块数据，小块数据都有各自的编号；它们从一个端点分道扬镳，但殊途同归，到另一个端点时，重新排列组合成完整数据。分组交换的好处之一是充分利用网络带宽，而当 TCP 连接空闲时，通常不占用任何带宽。
分组交换有可能出现数据的丢失、乱序、重复，如何检测、重传、缓存，实现可靠性传输是 TCP 的目标。别问，问就是三次握手、四次挥手、滑动窗口协议、拥塞控制算法&amp;hellip;&amp;hellip;
TCP/IP 协议族对普通程序员来说足够复杂，但是，David Wheeler 曾经说过：
 All problems in computer science can be solved by another level of indirection.
  Socket 是进程与传输层的中间层。 Socket 包含五元组 (client ip, client port, server ip, server port, protocol)。  同在传输层的 UDP 不如 TCP 可靠，但是轻量级，因为它没有确认、超时、重传的概念，也没有拥塞控制，而且无连接，从而能广播。
Socket 隐藏了下层具体实现的复杂性，并给上层提供了简单或统一的 API。下图是 TCP Socket 基本流程，使用 伯克利 Sockets 描述。
Unix 的主题是“一切都是文件”。当进程申请访问 Socket 时，内核则提供相应的文件描述符（int 变量），进程发起系统调用并传递相应的文件描述符来读写 Socket。</description>
    </item>
    
  </channel>
</rss>